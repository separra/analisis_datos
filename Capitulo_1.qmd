---
title: "Introducción al análisis de datos"
subtitle: "Evalución de las características físicas y químicas de diferentes accesiones de ají (*Capsicum spp*)"
author: "Sebastian Parra-Londono"
affiliation: "Programas agrícolas UTEDE"
format: 
  html: 
    theme: cerulean
    code-tools: true
toc: true
toc-depth: 3 
toc-location: right
toc-title: Contenidos
lang: "es"
tbl-cap-location: top
fig-cap-location: bottom
---

# Introducción a los datos empleados

Este documento contiene los resultados del experimento realizado con tres accesiones de *Capsicum spp.* crecidas en el muncipio de Palmira, departamento del Valle del Cauca, Colombia. En el cual se evaluaron las características físicas y químicas de los frutos obtenidos y almacenadas por varios días bajo un método de conservación con ácido acético.

En este capítulo se busca acercar a estudiantes, profesores e interesados en el análisis de datos agronómicos empleando métodos descriptivos e inferenciales utilizando el software R.

Se presentan, paso a paso, los métodos para los análisis realizados y las interpretaciones de los resultados obtenidos. De esta forma se busca que el lector pueda comprender y aplicar métodos de **estadística descriptiva e inferencial**. Los métodos aplicados buscan determinar el efecto de los tratamientos de conservación con ácido acético en las características físicas y químicas de los frutos de ají.

::: callout-note
**Estadística descriptiva:** hace referencia a los métodos estad´siticos empleados para describir la distribución, tendencia central y variación de un conjunto de datos, empleando diferentes estadísticos.
:::

# Cargar librerías

El primer paso consiste en cargar las librerías o paquetes que se desean emplear en los análisis al entorno de trabajo de R. Para ello se usa la función `library()`. Las librerías deben ser cargadas en el entorno de trabajo **cada vez** que se inicia una sesión de trabajo. Los paquetes contienen funciones específicas para realizar los análisis deseados.

```{r}
#| label: Cargar librerias de R
#| warning: false
#| message: false 
#| output: false
#| code-fold: true
library ("Hmisc")
library ("dplyr")
library ("reshape2")
library("ggplot2")
library ("RColorBrewer")
library("tidyr")
library("grid") 
library("gridExtra")
library("scales")
library("ggridges")
library ("car")
library("agricolae")
library("plotly")
library("viridis")
library ("DT")

```

# Cargar base de datos

Para iniciar con el análisis, es necesario cargar la información contenida en la base de datos. Generalmente los datos se almacenan en archivos .txt, .csv o de Excel. En este capítulo, los datos usados corresponden a las características físicas y químicas de los frutos obtenidos de las accesiones de Capsicum. En el análisis se emplearon tres repticiones por cada tratamiento. Los tratamientos corresponden a la combinación entre las diferentes accesiones de ají y los días de conservación de las muestras.

La base de datos que se presenta a continuación contiene todas las observaciones de las variables medidas. Para cargar el archivo con los datos se emplea la función `read.delim()`, la cual permite cargar un archivo delimitado por tabulaciones.

La función `datatable()` permite generar una tabla a partir de un objeto creado. En este caso se presentan las primeras observaciones de la abse de datos empleada en el análisis.

```{r}
#| label: Cargar datos a la plataforma R
#| warning: false 
#| message: false
#| code-fold: true
vida.util <- read.delim("vida_util.txt", dec=",")
datatable(head(vida.util), rownames=FALSE)
```

# Asiganción de factores y variables numéricas.

A continuación, se asignan los factores y variables numéricas al conjunto de datos para evitar errores en los análisis posteriores. Este paso facilita la aplicación de las pruebas estadísticas y la presentación de los resultados en figuras.Los factores de esta base de datos son dos:

-   Nombre de las accesiones (columna acce).
-   Especie (columna espe).

Las demás columnas presentes en la base de datos corresponden a variables numéricas medidas.

```{r}
#| label: Asignar factores y variables numericas a las columnas
#| warning: false 
#| message: false
#| output: false
#| code-fold: true
str (vida.util)
names (vida.util)
vida.util$acce <- as.factor (vida.util$acce)
vida.util$tiempo <- as.factor (vida.util$tiempo)

vida.util$acar <- as.numeric (vida.util$acar)
vida.util$bcar <- as.numeric (vida.util$bcar)
vida.util$zea <- as.numeric (vida.util$zea)
vida.util$bcrip <- as.numeric (vida.util$bcrip)
vida.util$lico <- as.numeric (vida.util$lico)
vida.util$provitA <- as.numeric (vida.util$provitA)
vida.util$brix <- as.numeric (vida.util$brix)
vida.util$ph <- as.numeric (vida.util$ph)
vida.util$hum <- as.numeric (vida.util$hum)
vida.util$L <- as.numeric (vida.util$L)
vida.util$a <- as.numeric (vida.util$a)
vida.util$b <- as.numeric (vida.util$b)
vida.util$C <- as.numeric (vida.util$C)
vida.util$h <- as.numeric (vida.util$h)
```

# Aplicación de análisis descriptivo

El primer paso en el análisis de la información es la aplicación de estadísticos para la descripción de los datos obtenidos, en este caso a partir de los frutos de Capsicum. Estos estadísticos determinan la tendencia central y la dispersión de los valores medidos. La librería `dplyr` contiene funciones para calcular los estadísticos deseados. A continuación se presenta el promedio y la desviación estandar obtenidas para las variables numéricas evaluadas. Estas variables fueron:

-   Características químicas:
    -   Grados Brix
    -   Porcentaje de humedad
    -   pH
-   Concentración de carotenoides
    -   Alfa caroteno
    -   Beta caroteno
    -   Zexantina
    -   Beta criptoxantina
    -   Licopeno
-   Color en escala CIELAB
    -   L\*
    -   a\*
    -   b\*
    -   C
    -   h

## Cálculo del promedio y desviación estándar.

Para el cálculo de los promedios se empleó la función `summarySE`, la cual permite calcular diferentes estadísticos descriptivos, agrupando por los factores del experimento planteado. En este caso se agrupó por accesiones y tiempo de conservación en ácido acético.

```{r}
#| label: Cálculo de promedios por tratamiento
#| warning: false 
#| message: false
#| code-fold: true

source ("Function se.R")

se.acar <- summarySE (vida.util, measurevar = "acar",
                      groupvars = c("acce", "tiempo"), na.rm = TRUE)
se.bcar <- summarySE (vida.util, measurevar = "bcar",
                      groupvars = c("acce", "tiempo"), na.rm = TRUE)
se.zea <- summarySE (vida.util, measurevar = "zea",
                     groupvars = c("acce", "tiempo"), na.rm = TRUE)
se.bcrip <- summarySE (vida.util, measurevar = "bcrip",
                       groupvars = c("acce", "tiempo"), na.rm = TRUE)
se.lico <- summarySE (vida.util, measurevar = "lico",
                      groupvars = c("acce", "tiempo"), na.rm = TRUE)
se.provita <- summarySE (vida.util, measurevar = "provitA",
                         groupvars = c("acce", "tiempo"), na.rm = TRUE)
```

Empleando esta función se generan objetos en los cuales se calcula el promedio, la desviación estandar (sd), el error estandar (se) y el íntervalo de confianza en los tratamientos (ci). Estos estadísticos muestran la tendencia central y la variación del conjunto de datos obtenidos. Esta información fue empleada para la elaboración de las figuras que describen las características físicas y químicas de los frutos de ají.

## Contenido de carotenoides en los frutos de *Capsicum* spp

Se presentan los promedios y desviación estándar de los contenidos de carotenoides en los frutos de Capsicum. Se muestra la concentración en mg por cada 100 g de fruto fresco. Para la elaboración de las figuras se emplean los valores obtenidos al calcular el promedio y la desviación estándar. La librería usada para la elaboración de las figuras fue `ggplot2 ()`, las cuales fueron creadas inicialmente como objeto y organizadas con la función `grid.arrange()`.

```{r}
#| label: Figura carotenoides
#| warning: false 
#| message: false
#| fig-cap: Figura 1. Concentración de carotenoides 
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 10
#| code-fold: true
#comparacion promedio de carotenos por tiempos para cada accesión
## alfa caroteno
f1 <- ggplot(se.acar, aes(x=tiempo, y=acar,
                    fill=tiempo)) +
  geom_bar(position = position_dodge(), stat = "identity",
           width = 0.8, colour = "black") +
  geom_errorbar (aes(ymin=acar-se,
                     ymax=acar+se),
                 position = position_dodge (0.1),
                 linetype ="solid", colour="black",
                 size=0.3, width=0.5) +
  scale_fill_brewer (name="Origen", palette="YlOrRd") +
  theme_bw() + facet_wrap(vars(acce), scales="free_x") +
  ylab (expression(paste(alpha~'caroteno'~(mg~x~100~g^-1)))) +
  xlab (expression(paste('Tiempo'))) +
  theme (axis.title = element_text (size=11),
         axis.text = element_text(size=11),
         axis.text.x = element_text(size=10, angle=0),
         panel.grid.major.x=element_blank(),
         panel.grid.minor.x=element_blank(),
         legend.position="none")

## beta caroteno
f2 <- ggplot(se.bcar, aes(x=tiempo, y=bcar,
                    fill=tiempo)) +
  geom_bar(position = position_dodge(), stat = "identity",
           width = 0.8, colour = "black") +
  
  geom_errorbar (aes(ymin=bcar-se,
                     ymax=bcar+se),
                 position = position_dodge (0.1),
                 linetype ="solid", colour="black",
                 size=0.3, width=0.5) +
  scale_fill_brewer (name="Origen", palette="YlOrRd") +
  theme_bw() + facet_wrap(vars(acce), scales="free_x") +
  ylab (expression(paste(beta~'caroteno'~(mg~x~100~g^-1)))) +
  xlab (expression(paste('Tiempo'))) +
  theme (axis.title = element_text (size=11),
         axis.text = element_text(size=11),
         axis.text.x = element_text(size=10, angle=0),
         panel.grid.major.x=element_blank(),
         panel.grid.minor.x=element_blank(),
         legend.position="none")

## Zeaxantina
f3 <- ggplot(se.zea, aes(x=tiempo, y=zea,
                   fill=tiempo)) +
  geom_bar(position = position_dodge(), stat = "identity",
           width = 0.8, colour = "black") +
  geom_errorbar (aes(ymin=zea-se,
                     ymax=zea+se),
                 position = position_dodge (0.8),
                 linetype ="solid", colour="black",
                 size=0.3, width=0.5) +
  scale_fill_brewer (name="Tiempo", palette="YlOrRd") +
  theme_bw() + facet_wrap(vars(acce), scales="free_x") +
  ylab (expression(paste('Zeaxantina'~(mg~x~100~g^-1)))) +
  xlab (expression(paste('Tiempo'))) +
  theme (axis.title = element_text (size=11),
         axis.text = element_text(size=11),
         axis.text.x = element_text(size=10, angle=0),
         panel.grid.major.x=element_blank(),
         panel.grid.minor.x=element_blank(),
         legend.position="none")

## beta criptaxantina
f4 <- ggplot(se.bcrip, aes(x=tiempo, y=bcrip,
                   fill=tiempo)) +
  geom_bar(position = position_dodge(), stat = "identity",
           width = 0.8, colour = "black") +
  geom_errorbar (aes(ymin=bcrip-se,
                     ymax=bcrip+se),
                 position = position_dodge (0.8),
                 linetype ="solid", colour="black",
                 size=0.3, width=0.5) +
  scale_fill_brewer (name="Tiempo", palette="YlOrRd") +
  theme_bw() + facet_wrap(vars(acce), scales="free_x") +
  ylab (expression(paste(beta~'criptoxantina'~(mg~x~100~g^-1)))) +
  xlab (expression(paste('Tiempo'))) +
  theme (axis.title = element_text (size=11),
         axis.text = element_text(size=11),
         axis.text.x = element_text(size=10, angle=0),
         panel.grid.major.x=element_blank(),
         panel.grid.minor.x=element_blank(),
         legend.position="none")

## licopeno
f5 <- ggplot(se.lico, aes(x=tiempo, y=lico,
                     fill=tiempo)) +
  geom_bar(position = position_dodge(), stat = "identity",
           width = 0.8, colour = "black") +
  geom_errorbar (aes(ymin=lico-se,
                     ymax=lico+se),
                 position = position_dodge (0.8),
                 linetype ="solid", colour="black",
                 size=0.3, width=0.5) +
  scale_fill_brewer (name="Tiempo", palette="YlOrRd") +
  theme_bw() + facet_wrap(vars(acce), scales="free_x") +
  ylab (expression(paste('Licopeno'~(mg~x~100~g^-1)))) +
  xlab (expression(paste('Tiempo'))) +
  theme (axis.title = element_text (size=11),
         axis.text = element_text(size=11),
         axis.text.x = element_text(size=10, angle=0),
         panel.grid.major.x=element_blank(),
         panel.grid.minor.x=element_blank(),
         legend.position="none")

## provitA
f6 <- ggplot(se.provita, aes(x=tiempo, y=provitA,
                    fill=tiempo)) +
  geom_bar(position = position_dodge(), stat = "identity",
           width = 0.8, colour = "black") +
  geom_errorbar (aes(ymin=provitA-se,
                     ymax=provitA+se),
                 position = position_dodge (0.8),
                 linetype ="solid", colour="black",
                 size=0.3, width=0.5) +
  scale_fill_brewer (name="Tiempo", palette="YlOrRd") +
  theme_bw() + facet_wrap(vars(acce), scales="free_x") +
  ylab (expression(paste('ProVitamina A'~(mg~x~100~g^-1)))) +
  xlab (expression(paste('Tiempo'))) +
  theme (axis.title = element_text (size=11),
         axis.text = element_text(size=11),
         axis.text.x = element_text(size=10, angle=0),
         panel.grid.major.x=element_blank(),
         panel.grid.minor.x=element_blank(),
         legend.position="none")

grid.arrange(f1,f2,f3,f4,f5,f6, nrow=2)
```

La altura de cada una de las barras muestra los valores promedios obtenidos por accesion a T0, T1 y T2. La variación de las observaciones se grafica con cada una de las alturas de las líneas sobre las barras. En términos generales la variación de las observaciones fue poca, sin embargo, se observó mayor variación en las observaciones obtenidas para la accesión 44. Esta figura permite evaluar el comportamiento de las variables númericas, contenido de carotenoides, entre las accesiones, permitiendo su comparación; de esta forma se puede determinar, mediante la comparación de los promedios que la accesión 44 presenta el mayor contenido de carotenoides.

## Aplicación de estadística inferencial

Antes de la aplicación de la estadísitica inferencial, es necesario corrobar la distribución de cada una de las variables numéricas, esto con el objetivo de visualizar su comportamiento y por tanto corroborar si los métodos a emplear serán paramétricos o no paramétricos. Para esto se emplean los diagramas de distribución de frecuencia y de cuantíles.

```{r}
#| label: Figura distribución de frecuencias
#| warning: false 
#| message: false
#| fig-cap: Figura 2. Distribución de frecuencias
#| fig-align: 'center'
#| fig-width: 6
#| fig-height: 6
#| code-fold: true

par(
  mfrow=c(1,2),
  mar=c(4,4,1,0)
)

hist (vida.util$acar)
qqPlot (lm(acar~acce, data=vida.util), col.lines="blue2") 
hist(vida.util$bcar)
qqPlot (lm(bcar~acce, data=vida.util), col.lines="blue2")
hist (vida.util$zea)
qqPlot (lm(zea~acce, data=vida.util), col.lines="blue2") 
hist(vida.util$bcrip)
qqPlot (lm(bcrip~acce, data=vida.util), col.lines="blue2")
hist (vida.util$lico)
qqPlot (lm(lico~acce, data=vida.util), col.lines="blue2")
hist(vida.util$provitA)
qqPlot (lm(provitA~acce, data=vida.util), col.lines="blue2")

dev.off()
```

Para observar la distribución de las frecuencias de las variables numéricas, se empleó la figura de histograma `hist`, en que se puede identificar la variación de las observaciones obtenidas y la frecuencia con la cual se presentan en el conjunto de datos.

El digarama de cuantiles `qqplot`es una figura para un diagnóstico rápido que revela si un conjunto de datos están distribuidos de forma normal. Este digrama compara cada uno de los puntos del set de datos con una distribución idealizada perfectamente normal. Por tanto se busca que los puntos tengan un compportamiento general lineal.

::: callout-note
**QQ-plot:** si todos los puntos o la mayoría de ellos se ubican sobre la línea recta o cerca de ella, la muestra se encuentra donde debería estar para una distribución normal.
:::

## Aplicación de estadística inferencial

En este caso se aplicará la estadística inferencial para determinar el efecto del tiempo en la concentración de los compuestos carotenoides y el comportamiento de las accesiones cuando son expuestas por varios días al método de conservación con ácido acético. En este caso se aplicará una prueba de Análisis de Varianza (ANOVA) de dos factores.

::: callout-note
**ANOVA:** es útil para analizar datos en un experimento cuando se evaluan cambios en una variable de respuesta relacionada con tratamientos particulares. Este test compara las varianzas entre los grupos y la varianza de los grupos comparados. 
:::

```{r}
#| label: Análisis de varianza
#| warning: false 
#| message: false

acar.aov <- aov (acar~acce*tiempo, data=vida.util)
Anova (acar.aov, type="II")
```


## Propiedades de los frutos de ají en fresco

Los frutos de Capsicum fueron evaluados en fresco, antes de someter las muestras al proceso de conservación con ácido acético. Las variables evaluadas fueron el pH, los grados brix y el porcentaje de humedad. Incialmente, los datos en fresco de los frutos de ají fueron obtenidos filtrando desde la base de datos original, aquellos evaluados en el tiempo T0. Esto se realizó usando la función `filter()` de la librería `dplyr`.

```{r}
#| label: Figura caracteristicas quimicas
#| warning: false 
#| message: false
#| fig-cap: Figura 3. Otras caracteristicas quimicas
#| fig-align: 'center'
#| fig-width: 6
#| fig-height: 6
#| code-fold: true

tiempo.0 <- filter (vida.util, tiempo=="T0")


## caracteristicas a tiempo 0
tiempo.0 <- tiempo.0[complete.cases(tiempo.0),]

proms.tiempo <- tiempo.0 [-c(2)] %>% 
  group_by (acce) %>%
  summarise_all (list(mean=mean, sd=sd))

f7 <- ggplot(proms.tiempo, aes(x=acce, y=ph_mean,
                       fill=acce)) +
  geom_bar(position = position_dodge(), stat = "identity",
           width = 0.8, colour = "black") +
  geom_errorbar (aes(ymin=ph_mean-ph_sd,
                     ymax=ph_mean+ph_sd),
                 position = position_dodge (0.8),
                 linetype ="solid", colour="black",
                 size=0.3, width=0.5) +
  scale_fill_brewer (name="Tiempo", palette="YlOrRd") +
  theme_bw() +
  ylab (expression(paste('pH'))) +
  xlab (expression(paste('Accesion'))) +
  theme (axis.title = element_text (size=11),
         axis.text = element_text(size=11),
         axis.text.x = element_text(size=10, angle=0),
         panel.grid.major.x=element_blank(),
         panel.grid.minor.x=element_blank(),
         legend.position="none")

f8 <- ggplot(proms.tiempo, aes(x=acce, y=brix_mean,
                         fill=acce)) +
  geom_bar(position = position_dodge(), stat = "identity",
           width = 0.8, colour = "black") +
  geom_errorbar (aes(ymin=brix_mean-brix_sd,
                     ymax=brix_mean+brix_sd),
                 position = position_dodge (0.8),
                 linetype ="solid", colour="black",
                 size=0.3, width=0.5) +
  scale_fill_brewer (name="Tiempo", palette="YlOrRd") +
  theme_bw() +
  ylab (expression(paste('°Brix'))) +
  xlab (expression(paste('Accesion'))) +
  theme (axis.title = element_text (size=11),
         axis.text = element_text(size=11),
         axis.text.x = element_text(size=10, angle=0),
         panel.grid.major.x=element_blank(),
         panel.grid.minor.x=element_blank(),
         legend.position="none")

f9 <- ggplot(proms.tiempo, aes(x=acce, y=hum_mean,
                         fill=acce)) +
  geom_bar(position = position_dodge(), stat = "identity",
           width = 0.8, colour = "black") +
  geom_errorbar (aes(ymin=hum_mean-hum_sd,
                     ymax=hum_mean+hum_sd),
                 position = position_dodge (0.8),
                 linetype ="solid", colour="black",
                 size=0.3, width=0.5) +
  scale_fill_brewer (name="Tiempo", palette="YlOrRd") +
  theme_bw() +
  ylab (expression(paste('Humedad'~("%")))) +
  xlab (expression(paste('Accesion'))) +
  theme (axis.title = element_text (size=11),
         axis.text = element_text(size=11),
         axis.text.x = element_text(size=10, angle=0),
         panel.grid.major.x=element_blank(),
         panel.grid.minor.x=element_blank(),
         legend.position="none")

grid.arrange(f7,f8,f9, nrow=1)

```

# Conclusión

Con los métodos de estadística descriptiva e inferencial se pudo identificar el efecto del tiempo en la concentración de carotenoides en los frutos de ají cuando estos son sometidos a diferentes tiempos de conservación en ácido acético.
